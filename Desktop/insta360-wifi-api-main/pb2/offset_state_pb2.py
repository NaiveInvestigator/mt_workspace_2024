# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: offset_state.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='offset_state.proto',
  package='insta360.messages',
  syntax='proto3',
  serialized_options=b'\242\002\005INSPB',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x12offset_state.proto\x12\x11insta360.messages*=\n\x0bOffsetState\x12\n\n\x06\x43ommon\x10\x00\x12\x11\n\rSphereProtect\x10\x01\x12\x0f\n\x0b\x44ivingWater\x10\x02\x42\x08\xa2\x02\x05INSPBb\x06proto3'
)

_OFFSETSTATE = _descriptor.EnumDescriptor(
  name='OffsetState',
  full_name='insta360.messages.OffsetState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Common', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SphereProtect', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DivingWater', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=41,
  serialized_end=102,
)
_sym_db.RegisterEnumDescriptor(_OFFSETSTATE)

OffsetState = enum_type_wrapper.EnumTypeWrapper(_OFFSETSTATE)
Common = 0
SphereProtect = 1
DivingWater = 2


DESCRIPTOR.enum_types_by_name['OffsetState'] = _OFFSETSTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
